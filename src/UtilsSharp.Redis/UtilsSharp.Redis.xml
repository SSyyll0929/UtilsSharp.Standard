<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UtilsSharp.Redis</name>
    </assembly>
    <members>
        <member name="T:UtilsSharp.Redis.RedisCacheHelper">
            <summary>
            RedisCacheHelper
            </summary>
        </member>
        <member name="T:UtilsSharp.Redis.RedisCacheHelper`1">
            <summary>
            Redis缓存帮助类
            </summary>
            <summary>
            Redis缓存帮助类
            </summary>
        </member>
        <member name="P:UtilsSharp.Redis.RedisCacheHelper`1.Instance">
            <summary>
            CSRedisClient 静态实例，使用前请初始化
            RedisHelper.Initialization(new CSRedis.CSRedisClient(\"127.0.0.1:6379,password=123,defaultDatabase=13,poolsize=50,ssl=false,writeBuffer=10240,prefix=key前辍\"))
            </summary>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.Initialization(CSRedis.CSRedisClient)">
            <summary>
            初始化csredis静态访问类
            RedisHelper.Initialization(new CSRedis.CSRedisClient(\"127.0.0.1:6379,password=123,defaultDatabase=13,poolsize=50,ssl=false,writeBuffer=10240,prefix=key前辍\"))
            </summary>
            <param name="csredis"></param>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.Set(System.String,System.Object,System.Int32)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存key</param>
            <param name="value">缓存数据</param>
            <param name="expireSeconds">缓存时间(秒)</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存key</param>
            <param name="value">缓存数据</param>
            <param name="expire">缓存时间戳</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.Remove(System.String[])">
            <summary>
            移除缓存
            </summary>
            <param name="keys">缓存keys</param>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.RemoveByPattern(System.String)">
            <summary>
            移除缓存(pattern方式)
            </summary>
            <param name="pattern">如：test*</param>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.IsExists(System.String)">
            <summary>
            验证缓存是否存在
            </summary>
            <param name="key">缓存key</param>
            <returns >是否存在</returns>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.Get(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns>缓存数据</returns>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <typeparam name="T">缓存数据类型</typeparam>
            <param name="key">缓存Key</param>
            <returns>缓存数据</returns>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.GetByPattern(System.String)">
            <summary>
            获取缓存(pattern方式)
            </summary>
            <param name="pattern">如：test*</param>
            <returns>缓存数据</returns>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.SetAsync(System.String,System.Object,System.Int32)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存key</param>
            <param name="value">缓存数据</param>
            <param name="expireSeconds">缓存时间(秒)</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.SetAsync(System.String,System.Object,System.TimeSpan)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存key</param>
            <param name="value">缓存数据</param>
            <param name="expire">缓存时间戳</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.RemoveAsync(System.String[])">
            <summary>
            移除缓存
            </summary>
            <param name="keys">缓存keys</param>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.RemoveByPatternAsync(System.String)">
            <summary>
            移除缓存(pattern方式)
            </summary>
            <param name="pattern">如：test*</param>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.IsExistsAsync(System.String)">
            <summary>
            验证缓存是否存在
            </summary>
            <param name="key">缓存key</param>
            <returns >是否存在</returns>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.GetAsync(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns>缓存数据</returns>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.GetAsync``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <typeparam name="T">缓存数据类型</typeparam>
            <param name="key">缓存Key</param>
            <returns>缓存数据</returns>
        </member>
        <member name="M:UtilsSharp.Redis.RedisCacheHelper`1.GetByPatternAsync(System.String)">
            <summary>
            获取缓存(pattern方式)
            </summary>
            <param name="pattern">如：test*</param>
            <returns>缓存数据</returns>
        </member>
        <member name="T:UtilsSharp.Redis.RedisManager">
            <summary>
            Redis注册管理
            </summary>
        </member>
        <member name="M:UtilsSharp.Redis.RedisManager.Register">
            <summary>
            注册
            </summary>
        </member>
        <member name="M:UtilsSharp.Redis.RedisManager.Register``2(CSRedis.CSRedisClient)">
            <summary>
            注册
            </summary>
            <typeparam name="T">T</typeparam>
            <typeparam name="T1">T1</typeparam>
            <param name="csRedisClient">csRedisClient</param>
        </member>
        <member name="M:UtilsSharp.Redis.RedisManager.GetMultipleDbCsRedisClient(System.String,System.Int32)">
            <summary>
            获取多数据库CsRedisClient客户端
            </summary>
            <param name="redisConnection">redis连接串，无需包含：defaultDatabase</param>
            <param name="dbCount">数据库数量</param>
            <returns></returns>
        </member>
    </members>
</doc>
